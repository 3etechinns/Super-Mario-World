{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Controller.js","webpack:///./src/Game_Main.js","webpack:///./src/audio/music.mp3","webpack:///./src/display/Camera.js","webpack:///./src/display/Display.js","webpack:///./src/display/Sprite_Sheet.js","webpack:///./src/display/sprites/background_sheet1_sprites.js","webpack:///./src/display/sprites/enemy_sprites.js","webpack:///./src/display/sprites/mario_sprites.js","webpack:///./src/display/tilemap.js","webpack:///./src/files.js","webpack:///./src/game/Collider.js","webpack:///./src/game/Game.js","webpack:///./src/game/behaviors/Auto_Move.js","webpack:///./src/game/behaviors/Behavior.js","webpack:///./src/game/behaviors/Box_Jump.js","webpack:///./src/game/behaviors/Ignore_Gravity.js","webpack:///./src/game/behaviors/Invincible.js","webpack:///./src/game/behaviors/Jump.js","webpack:///./src/game/behaviors/Jump_On_Lose.js","webpack:///./src/game/behaviors/Spawn_Enemies.js","webpack:///./src/game/behaviors/Stomp.js","webpack:///./src/game/behaviors/Walk.js","webpack:///./src/game/objects/Bullet.js","webpack:///./src/game/objects/Dragon.js","webpack:///./src/game/objects/Game_Object.js","webpack:///./src/game/objects/Mario.js","webpack:///./src/game/objects/Mushroom.js","webpack:///./src/game/objects/Mystery_Box.js","webpack:///./src/imgs/background.png","webpack:///./src/imgs/background_assets.png","webpack:///./src/imgs/enemies.png","webpack:///./src/imgs/mario.png","webpack:///./src/imgs/super-mario-world.png","webpack:///./src/imgs/thank_you.png","webpack:///./src/index.js","webpack:///./src/util.js"],"names":["Controller","gameMain","keyStates","Map","keyMap","mapLeftMove","bind","mapRightMove","mapJump","mapInputResponses","togglePause","map","keyState","input","mario","game","walk","rightDirection","leftDirection","vel","y","isGrounded","jump","start","cancel","code","callback","set","e","preventDefault","has","type","get","window","addEventListener","handleEvent","GameMain","display","pauseStatus","animate","run","pause","pos","lastTime","accumulatedTime","controller","listenForInput","mouseDebugger","canvas","camera","deltaTime","id","requestAnimationFrame","cancelAnimationFrame","time","update","drawWorld","entity","lastEvent","forEach","eventName","event","buttons","offsetX","x","offsetY","Camera","height","width","Vector","Display","ctx","getContext","backgroundColor","spriteSheets","loadedSheets","Set","loadWorld","thanksImage","onload","thanksSheet","SpriteSheet","addSprite","add","backgroundImage","backgroundSheet","backgroundSheet1Sprites","sprites","sprite","name","backgroundFirstLayerImage","marioImage","marioSheetSprites","marios","marioSheet","addSpriteFlipped","enemiesImage","enemiesSheetSprites","enemies","enemy","enemySheet","finishedLoading","drawImage","cameraPanel","cameraView","objects","object","draw","image","tileWidth","tileHeight","clip","document","createElement","translate","scale","spriteImg","Image","src","backgroundAssets","thanks","titleScreenImage","titleScreen","backgroundFirstLayer","music","Audio","musicAudio","Collider","tileMap","tileSize","handleMatchingTiles","gameObj","status","getRight","matchingTiles","findMatchingTiles","getBottom","handleMatchingTilesX","match","tile","handleGroundCollisionX","left","right","xStart","xEnd","handleMatchingTilesY","handleGroundCollisionY","handleFloatingPlatformY","top","bottom","getLastBottom","toIndexRange","indexX","indexY","getByIndex","push","pos1","pos2","posMax","Math","ceil","range","floor","Game","gravity","Mario","addSpawns","restarting","totalTime","collider","setTilemapLayer","restartLevel","checkEnemyCollision","frames","lastPos","checkX","checkY","overlaps","collides","newEnemy","tilemap","Dragon","x1Limit","x2Limit","Bullet","trigger","addBehavior","SpawnEnemies","backgrounds","background","ranges","xLength","yStart","yLength","yEnd","setTile","box","MysteryBox","setTimeout","removeEnemies","lives","invincible","backgroundSpriteSheet","frame","panelCtx","columnStart","getTileIndex","columnEnd","column","marioPosX","marioPosY","tileName","getTile","AutoMove","moveLeftLimit","moveRightLimit","startingDirection","speed","Behavior","console","warn","BoxJump","maxDuration","duration","getTop","originalPos","setToTile","IgnoreGravity","Invincible","invinciblity","Jump","JumpOnLose","gameObjects","spawnEnemy","enemyPositions","Stomp","bouncing","bounceSpeed","Walk","distance","xSpawn","ySpawn","initialPos","falling","behaviors","behavior","stomp","bounce","removeBehavior","GameObject","stompedCount","facing","regularWalkLeftFrames","regularWalkRightFrames","halfWalkLeftFrames","halfWalkRightFrames","decideStatus","animationFrame","beh","idx","splice","frameRate","frameIdx","length","walkRightFrames","walkRightFramesMushroom","walkLeftFrames","walkLeftFramesMushroom","totalDistance","abs","getLeft","Mushroom","mushroomSpawn","hit","boxIdleAnimation","boxJump","mushroom","getElementById","sound","querySelector","noSound","play","parentNode","removeChild","once"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class Controller {\n    constructor(gameMain){\n        this.gameMain = gameMain;\n        this.keyStates = new Map();\n        this.keyMap = new Map();  //response for a key code\n        this.mapLeftMove = this.mapLeftMove.bind(this)\n        this.mapRightMove = this.mapRightMove.bind(this)\n        this.mapJump = this.mapJump.bind(this)\n        this.mapInputResponses();\n    }\n    mapInputResponses(){\n        this.mapJump(\"Space\"); //coresponds to e.code\n        this.mapJump(\"KeyW\"); \n        this.mapJump(\"ArrowUp\"); \n        \n        this.mapRightMove(\"ArrowRight\"); \n        this.mapRightMove(\"KeyD\"); \n\n        this.mapLeftMove(\"ArrowLeft\");\n        this.mapLeftMove(\"KeyA\");\n        const togglePause = this.gameMain.togglePause;\n        this.map(\"KeyP\", keyState => { \n            if( keyState) {\n                togglePause();\n            }\n        });\n\n    }\n    mapRightMove(input) {\n        const mario = this.gameMain.game.mario\n        this.map(input, keyState => {\n            mario.walk.rightDirection = keyState;\n        })\n    }\n    mapLeftMove(input) {\n        const mario = this.gameMain.game.mario\n        this.map(input, keyState => {\n            mario.walk.leftDirection = -keyState;\n        })\n    }\n    mapJump(input){\n        const mario = this.gameMain.game.mario\n        this.map(input, keyState => {\n            if (keyState && mario.vel.y <= 0 ) {\n    \n                mario.isGrounded = false;\n                mario.jump.start();\n            } else {\n                mario.jump.cancel();\n            }\n        })\n    }\n    map(code, callback) {\n        this.keyMap.set(code, callback);\n    }\n    handleEvent(e) { // only need to know code and type of input\n        e.preventDefault();\n        if (!this.keyMap.has(e.code)) return;\n        const keyState = e.type === 'keydown' ? 1 : 0;\n\n        if (this.keyStates.get(e.code) === keyState) return;\n        this.keyStates.set(e.code, keyState);\n        this.keyMap.get(e.code)(keyState);\n    }\n    listenForInput() {\n        window.addEventListener(\"keydown\", e => {\n            this.handleEvent(e);\n        });\n        window.addEventListener(\"keyup\", e => {\n            this.handleEvent(e);\n        });\n    }\n}\n\n","import Controller from './Controller';\n\nexport default class GameMain {\n    constructor(game, display) {\n        this.game = game;\n        this.display = display;\n        this.pauseStatus = false;\n\n\n        this.animate = this.animate.bind(this);\n        this.run = this.run.bind(this);\n        this.pause = this.pause.bind(this);\n        this.togglePause = this.togglePause.bind(this);\n\n    }\n    start() {\n        //starting player position\n        this.game.mario.pos.set(145, 250);\n\n        // //testing for maping out area\n        // this.display.camera.pos.x = 4000;\n        this.lastTime = 0;\n        this.accumulatedTime = 0;\n        \n        // this.display.loadWorld();\n\n        const controller = new Controller(this);\n        controller.listenForInput();\n//////TESTING///////////////////////////////\n        mouseDebugger(this.display.canvas, this.game.mario, this.display.camera)\n////////////////////////////////////////////\n\n\n\n\n        //start fixed timestep of 1/60\n        this.deltaTime = 1 / 60;\n\n        this.run();\n    }\n    togglePause(){\n        if (this.pauseStatus) {\n            this.run();\n        } else {\n            this.pause();\n        }\n    }\n    run(){\n        this.pauseStatus = false;\n        this.id = requestAnimationFrame(this.animate);\n    }\n    pause(){\n        this.pauseStatus = true;\n        cancelAnimationFrame(this.id);\n    }\n    animate(time) {\n        this.accumulatedTime += (time - this.lastTime) / 1000;\n        if (this.accumulatedTime > 1) this.accumulatedTime = 1;\n        while (this.accumulatedTime > this.deltaTime) {\n            this.game.update( this.deltaTime )\n            this.display.drawWorld(this.game);\n            \n            this.accumulatedTime -= this.deltaTime;\n        }\n\n        this.lastTime = time;\n\n        this.id = requestAnimationFrame(this.animate);\n    };\n\n}\n\nfunction mouseDebugger(canvas, entity, camera) {\n    let lastEvent;\n    ['mousedown', 'mousemove'].forEach(eventName => {\n        canvas.addEventListener(eventName, event => {\n            if (event.buttons === 1) {\n\n                entity.vel.set(0, 0);\n                entity.pos.set(event.offsetX + camera.pos.x, event.offsetY + camera.pos.y);\n            } else if (event.buttons === 2 && lastEvent && lastEvent.buttons === 2 && lastEvent.type === \"mousemove\") {\n\n                camera.pos.x -= event.offsetX - lastEvent.offsetX;\n            }\n            lastEvent = event;\n        });\n    });\n    canvas.addEventListener('contextmenu', event => {\n        event.preventDefault();\n    })\n}","module.exports = \"files/music.mp3\";","import {Vector} from \"../util\";\n\nexport default class Camera {\n    constructor(height, width) {\n        this.pos = new Vector(0, 0);\n        this.width = width, \n        this.height = height;\n    }\n}","import SpriteSheet from \"./Sprite_Sheet.js\";\nimport { backgroundImage, marioImage, backgroundFirstLayerImage, enemiesImage, thanksImage} from \"../files\";\nimport Camera from './Camera';\nimport backgroundSheet1Sprites from './sprites/background_sheet1_sprites';\nimport marioSheetSprites from './sprites/mario_sprites';\nimport enemiesSheetSprites from './sprites/enemy_sprites';\n\nexport default class Display {\n    constructor(canvas, height, width) {\n        canvas.height = height;\n        canvas.width = width;\n        this.camera = new Camera(height, width);\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n        this.height = height;\n        this.width = width;\n        this.backgroundColor = \"#0F5EF1\";\n        this.spriteSheets = new Map();\n        this.loadedSheets = new Set();\n        this.loadWorld = this.loadWorld.bind(this);\n        \n    }\n\n    loadWorld() {\n        const spriteSheets = this.spriteSheets;\n        const loadedSheets = this.loadedSheets;\n        thanksImage.onload = function() {\n            const thanksSheet = new SpriteSheet(thanksImage, 600, 400);\n            thanksSheet.addSprite( \"thanks\", 0, 0);\n            spriteSheets.set(\"thanks\", thanksSheet);\n            loadedSheets.add(\"thanks\");\n\n        }\n        backgroundImage.onload = function () {\n            const backgroundSheet = new SpriteSheet(backgroundImage, 29, 29);\n            backgroundSheet1Sprites.sprites.forEach( (sprite) => {\n                backgroundSheet.addSprite( sprite.name, sprite.x, sprite.y );\n            });\n           spriteSheets.set(\"background\", backgroundSheet);\n           loadedSheets.add(\"background\");\n        }   \n\n        backgroundFirstLayerImage.onload = function () {\n            loadedSheets.add(\"backgroundLastLayer\");\n        }   \n\n        marioImage.onload = function () {\n            marioSheetSprites.marios.forEach((mario) => {\n                const marioSheet = new SpriteSheet(marioImage, mario.width, mario.height);\n                mario.sprites.forEach(sprite => {\n                    if (sprite.type === \"flip\") {\n                        marioSheet.addSpriteFlipped(sprite.name, sprite.x, sprite.y);\n                    } else {\n                        marioSheet.addSprite(sprite.name, sprite.x, sprite.y);\n                    }\n                });\n                spriteSheets.set( mario.SpriteSheet , marioSheet);\n            })\n            loadedSheets.add(\"mario\");\n        }\n\n        enemiesImage.onload = function () {\n            enemiesSheetSprites.enemies.forEach((enemy) => {\n                const enemySheet = new SpriteSheet(enemiesImage, enemy.width, enemy.height);\n                enemy.sprites.forEach( (sprite) => {\n                    if (sprite.type === \"flip\") {\n                        enemySheet.addSpriteFlipped(sprite.name, sprite.x, sprite.y);\n\n                    } else {\n                        enemySheet.addSprite(sprite.name, sprite.x, sprite.y);\n                    }\n                });\n                spriteSheets.set( enemy.SpriteSheet, enemySheet);\n            })\n            loadedSheets.add(\"enemies\");\n        }\n    }\n\n\n\n    drawWorld(game){\n        if (this.finishedLoading()) {\n            //draw first layer of background\n            this.ctx.drawImage(backgroundFirstLayerImage, -this.camera.pos.x / 4.6, 0);\n            const backgroundSheet = this.spriteSheets.get(\"background\");\n\n            // only draw the tiles that the camera is viewing\n            const cameraPanel = game.cameraView(this.camera, backgroundSheet);\n            this.ctx.drawImage(cameraPanel, -this.camera.pos.x % 29, 0);\n            \n            game.objects.forEach(object => object.draw(this.ctx, this.spriteSheets, this.camera) )\n            \n                        if(game.mario.pos.x > 5000)\n                        this.spriteSheets.get(\"thanks\").draw(\"thanks\", this.ctx, 5900 - this.camera.pos.x, 0 - this.camera.pos.y)\n        }\n    }\n    finishedLoading(){ \n        return this.loadedSheets.has(\"background\") && this.loadedSheets.has(\"backgroundLastLayer\") && this.loadedSheets.has(\"mario\") && this.loadedSheets.has(\"enemies\") && this.loadedSheets.has(\"thanks\") \n    }\n\n}\n\n","export default class SpriteSheet {\n    constructor(image, tileWidth, tileHeight){\n        this.image = image\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n        this.sprites = new Map(); //store sprites in key/value object\n    }\n    addSprite(sprite, offsetX, offsetY){ \n    //clip from spritesheet and store into sprites;\n        const clip = document.createElement('canvas');\n        clip.width = this.tileWidth;\n        clip.height = this.tileHeight;\n        const ctx = clip.getContext('2d');\n        ctx.drawImage( this.image, \n                        offsetX, offsetY, \n                        this.tileWidth, this.tileHeight, \n                        0, 0, \n                        this.tileWidth * 2, this.tileHeight * 2\n                    );\n\n        this.sprites.set(sprite, clip);\n    }\n    addSpriteFlipped(sprite, offsetX, offsetY){ \n    //add sprite flipped horizontally\n\n        const clip = document.createElement('canvas');\n        clip.width = this.tileWidth;\n        clip.height = this.tileHeight;\n        const ctx = clip.getContext('2d');\n        ctx.translate(this.tileWidth, 0);\n        ctx.scale(-1, 1);\n        ctx.drawImage( this.image, \n                        offsetX, offsetY, \n                        this.tileWidth, this.tileHeight, \n                        0, 0, \n                        this.tileWidth * 2, this.tileHeight * 2\n                    );\n\n        this.sprites.set(sprite, clip);\n    }\n\n    draw( sprite, ctx, x, y) {\n        const spriteImg = this.sprites.get(sprite);\n        ctx.drawImage(spriteImg, x, y)\n        // debugger\n    }\n}\n","export default {\n    \"width\": 29,\n    \"height\": 29,\n    \"sprites\": [\n        //transparent sky\n        {\n            \"name\": \"transparent\",\n            \"x\": 155,\n            \"y\": 165\n        },\n        // {\n        //     \"name\": \"sky\",\n        //     \"x\": 510,\n        //     \"y\": 570\n        // },\n        {\n            \"name\": \"groundTop\",\n            \"x\": 445,\n            \"y\": 202\n        },\n        {\n            \"name\": \"groundSoil\",\n            \"x\": 445,\n            \"y\": 220\n        },\n        {\n            \"name\": \"groundMidLeftEdge\",\n            \"x\": 427,\n            \"y\": 220\n        },\n        {\n            \"name\": \"groundMidRightEdge\",\n            \"x\": 462,\n            \"y\": 220\n        },\n        {\n            \"name\": \"groundTopRightEdge\",\n            \"x\": 462,\n            \"y\": 202\n        },\n        {\n            \"name\": \"groundTopLeftEdge\",\n            \"x\": 427,\n            \"y\": 202\n        },\n        {\n            \"name\": \"groundTopRightPatch\",\n            \"x\": 358,\n            \"y\": 383\n        },\n        {\n            \"name\": \"groundTopLeftPatch\",\n            \"x\": 374.5,\n            \"y\": 382.5\n        },\n        {\n            \"name\": \"groundTopFloatingLeft\",\n            \"x\": 427,\n            \"y\": 253\n        },\n        {\n            \"name\": \"groundTopFloatingRight\",\n            \"x\": 462,\n            \"y\": 253\n        },\n        {\n            \"name\": \"groundTopFloatingRightSoil\",\n            \"x\": 462,\n            \"y\": 271\n        },\n        {\n            \"name\": \"groundTopFloatingLeftSoil\",\n            \"x\": 427,\n            \"y\": 271\n        },\n        {\n            \"name\": \"platformLeft\",\n            \"x\": 37.5,\n            \"y\": 1\n        },\n        {\n            \"name\": \"platformMiddle\",\n            \"x\": 55,\n            \"y\": 1\n        },\n        {\n            \"name\": \"platformRight\",\n            \"x\": 72.5,\n            \"y\": 1\n        },\n        {\n            \"name\": \"mysteryBox1\",\n            \"x\": 173.3,\n            \"y\": 181.3\n        },\n        {\n            \"name\": \"mysteryBox2\",\n            \"x\": 190.3,\n            \"y\": 181.3\n        },\n        {\n            \"name\": \"mysteryBox3\",\n            \"x\": 207.3,\n            \"y\": 181.3\n        },\n        {\n            \"name\": \"mysteryBox4\",\n            \"x\": 224.3,\n            \"y\": 181.3\n        },\n        {\n            \"name\": \"grass1\",\n            \"x\": 90,\n            \"y\": 464\n        },\n        {\n            \"name\": \"grass2\",\n            \"x\": 124,\n            \"y\": 464\n        },\n        {\n            \"name\": \"grass3\",\n            \"x\": 158,\n            \"y\": 464\n        },\n        {\n            \"name\": \"grass4\",\n            \"x\": 192,\n            \"y\": 464\n        },\n        {\n            \"name\": \"singlePlatform\",\n            \"x\": 173.5,\n            \"y\": 164\n        },\n        // {\n        //     \"name\": \"happyCloud\",\n        //     \"x\": 257.8,\n        //     \"y\": 13.8\n        // },\n        {\n            \"name\": \"mushroom\",\n            \"x\": 292,\n            \"y\": 30\n        }\n    ]\n}","export default {\n    \"enemies\": [\n        { \n            \"SpriteSheet\": \"bullet\",\n            \"width\": 140,\n            \"height\": 128,\n            \"sprites\": [\n                {\n                    \"name\": \"bulletLeft\",\n                    \"x\": 7,\n                    \"y\": 1162\n                }\n            ]\n        },\n        {\n            \"SpriteSheet\": \"dragonHalfFlattened\",\n            \"width\": 43,\n            \"height\": 34,\n            \"sprites\": [\n                {\n                    \"name\": \"halfFlattenedWalkLeft1\",\n                    \"x\": 169,\n                    \"y\": 325\n                },\n                {\n                    \"name\": \"halfFlattenedWalkLeft2\",\n                    \"x\": 130,\n                    \"y\": 325\n                },\n                {\n                    \"name\": \"halfFlattenedWalkRight1\",\n                    \"type\": \"flip\",\n                    \"x\": 169,\n                    \"y\": 325\n                },\n                {\n                    \"name\": \"halfFlattenedWalkRight2\",\n                    \"type\": \"flip\",\n                    \"x\": 130,\n                    \"y\": 325\n                },\n            ]\n        },\n        {\n            \"SpriteSheet\": \"dragonFlattened\",\n            \"width\": 43,\n            \"height\": 20,\n            \"sprites\": [\n                {\n                    \"name\": \"flattenedLeft\",\n                    \"x\": 89,\n                    \"y\": 328\n                },\n                {\n                    \"name\": \"flattenedRight\",\n                    \"type\": \"flip\",\n                    \"x\": 89,\n                    \"y\": 328\n                },\n            ]\n        },\n        {\n            \"SpriteSheet\": \"dragonRegular\",\n            \"width\": 43,\n            \"height\": 63,\n            \"sprites\": [\n                {\n                    \"name\": \"regularWalkLeft1\",\n                    \"x\": 249,\n                    \"y\": 318\n                },\n                {\n                    \"name\": \"regularWalkLeft2\",\n                    \"x\": 209,\n                    \"y\": 318\n                },\n                {\n                    \"name\": \"regularWalkRight1\",\n                    \"type\": \"flip\",\n                    \"x\": 209,\n                    \"y\": 318\n                },\n                {\n                    \"name\": \"regularWalkRight2\",\n                    \"type\": \"flip\",\n                    \"x\": 249,\n                    \"y\": 318\n                },\n            ]\n        }\n    ]\n}","export default {\n\n    \"marios\": [\n        {\n            \"SpriteSheet\": \"mushroomMario\",\n            \"width\": 36,\n            \"height\": 56,\n            \"sprites\": [\n                {\n                    \"name\": \"idleRight\",\n                    \"x\": 207,\n                    \"y\": 76\n                },\n                {\n                    \"name\": \"walkingRight1\",\n                    \"x\": 327,\n                    \"y\": 76\n                },\n                {\n                    \"name\": \"walkingRight2\",\n                    \"x\": 367,\n                    \"y\": 76\n                },\n                {\n                    \"name\": \"idleLeft\",\n                    \"type\": \"flip\",\n                    \"x\": 207,\n                    \"y\": 76\n                },\n                {\n                    \"name\": \"walkingLeft1\",\n                    \"type\": \"flip\",\n                    \"x\": 327,\n                    \"y\": 76\n                },\n                {\n                    \"name\": \"walkingLeft2\",\n                    \"type\": \"flip\",\n                    \"x\": 367,\n                    \"y\": 76\n                },\n                {\n                    \"name\": \"jumpingRight\",\n                    \"x\": 207,\n                    \"y\": 116\n                },\n                {\n                    \"name\": \"jumpingLeft\",\n                    \"type\": \"flip\",\n                    \"x\": 207,\n                    \"y\": 116\n                },\n                {\n                    \"name\": \"fallingRight\",\n                    \"x\": 247,\n                    \"y\": 116\n                },\n                {\n                    \"name\": \"fallingLeft\",\n                    \"type\": \"flip\",\n                    \"x\": 247,\n                    \"y\": 116\n                },\n            ]\n        },\n        {\n            \"SpriteSheet\": \"regularMario\",\n            \"width\": 60,\n            \"height\": 60,\n            \"sprites\": [\n                {\n                    \"name\": \"idleRight\",\n                    \"x\": 209,\n                    \"y\": 0\n                },\n                {\n                    \"name\": \"lose\",\n                    \"x\": 9,\n                    \"y\": 38\n                },\n                {\n                    \"name\": \"walkingRight\",\n                    \"x\": 328,\n                    \"y\": 0\n                },\n                {\n                    \"name\": \"idleLeft\",\n                    \"x\": 168,\n                    \"y\": 0\n                },\n                {\n                    \"name\": \"walkingLeft\",\n                    \"x\": 49,\n                    \"y\": 0\n                },\n                {\n                    \"name\": \"jumpingRight\",\n                    \"x\": 208,\n                    \"y\": 40\n                },\n                {\n                    \"name\": \"jumpingLeft\",\n                    \"x\": 168,\n                    \"y\": 40\n                },\n                {\n                    \"name\": \"transparent\",\n                    \"x\": 0,\n                    \"y\": 0\n                }\n            ]\n        }\n    ]\n}","export default {\n    \"backgrounds\": [\n        {\n            \"tile\": \"groundTop\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                   0, 125,\n                   12, 1\n                ],\n                [\n                   130, 18,\n                   10, 1\n                ],\n                [\n                   153, 25,\n                   6, 1\n                ],\n                [\n                    0,5,\n                    10,1\n                ],\n                [\n                    33, 5,\n                    9, 5\n                ],\n                [\n                    202, 20,\n                    12, 1\n                ],\n            ]\n        },\n       {\n            \"tile\": \"groundSoil\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    0, 125,\n                    13, 1\n                ],\n                [\n                    130, 18,\n                    11, 3\n                ],\n                [\n                    153, 25,\n                    7, 7\n                ],\n                [\n                    0, 5,\n                    11, 2\n                ],\n                [\n                    33, 5,\n                    10, 4\n                ],\n                [\n                    202, 20,\n                    13, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundTopRightEdge\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    5, 1,\n                    10, 1\n                ],\n                [\n                    37, 1,\n                    9, 1\n                ],\n                [\n                    78, 1,\n                    12, 1\n                ],\n                [\n                    110, 1,\n                    12, 1\n                ],\n                [\n                    135, 1,\n                    10, 1\n                ],\n                [\n                    145, 1,\n                    10, 1\n                ],\n                [\n                    158, 1,\n                    6, 1\n                ],\n                [\n                    222, 1,\n                    12, 1\n                ],\n                [\n                    177, 1,\n                    6, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundTopLeftEdge\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    32, 1,\n                    9, 1\n                ],\n                [\n                    93, 1,\n                    12, 1\n                ],\n                [\n                    130, 1,\n                    10, 1\n                ],\n                [\n                    140, 1,\n                    10, 1\n                ],\n                [\n                    152, 1,\n                    6, 1\n                ],\n                [\n                    162, 1,\n                    6, 1\n                ],\n                [\n                    202, 1,\n                    12, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundMidRightEdge\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    5, 1,\n                    11, 1\n                ],\n                [\n                    5, 1,\n                    11, 1\n                ],\n                [\n                    37, 1,\n                    10, 2   \n                ],\n                [\n                    78, 1,\n                    13, 1\n                ],\n                [\n                    110, 1,\n                    13, 1\n                ],\n                [\n                    135, 1,\n                    11, 1\n                ],\n                [\n                    145, 1,\n                    11, 3\n                ],\n                [\n                    158, 1,\n                    7, 1\n                ],\n                [\n                    222, 1,\n                    13, 1\n                ],\n                [\n                    177, 1,\n                    7, 7\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundMidLeftEdge\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    32, 1,\n                    10, 2\n                ],\n                [\n                    93, 1,\n                    13, 1\n                ],\n                [\n                    130, 1,\n                    11, 3\n                ],\n                [\n                    140, 1,\n                    11, 1\n                ],\n                [\n                    152, 1,\n                    7, 7\n                ],\n                [\n                    162, 1,\n                    7, 1\n                ],\n                [\n                    202, 1,\n                    13, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundTopRightPatch\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    5, 1,\n                    12, 1\n                ],\n                [\n                    37, 1,\n                    12, 1\n                ],\n                [\n                    135, 1,\n                    12, 1\n                ],\n                [\n                    158, 1,\n                    8, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundTopLeftPatch\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    32, 1,\n                    12, 1\n                ],\n                [\n                    140, 1,\n                    12, 1\n                ],\n                [\n                    162, 1,\n                    8, 1\n                ],\n            ]\n        },\n        {\n            \"tile\": \"groundTopFloatingLeft\",\n            \"type\": \"floatingPlatform\",\n            \"ranges\": [\n                [\n                    73, 1,\n                    8, 1\n                ],\n                [\n                    100, 1,\n                    7, 1\n                ],\n                [\n                    113, 1,\n                    6, 1\n                ],\n            ]\n        },\n        {\n            \"tile\": \"groundTop\",\n            \"type\": \"floatingPlatform\",\n            \"ranges\": [\n                [\n                    74, 3,\n                    8, 1\n                ],\n                [\n                    101, 5,\n                    7, 1\n                ],\n                [\n                    114, 10,\n                    6, 1\n                ],\n                [\n                    136, 4,\n                    12, 1\n                ],\n                [\n                    159, 3,\n                    8, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundTopFloatingRight\",\n           \"type\": \"floatingPlatform\",\n            \"ranges\": [\n                [\n                    77, 1,\n                    8, 1\n                ],\n                [\n                    106, 1,\n                    7, 1\n                ],\n                [\n                    124, 1,\n                    6, 1\n                ],\n            ]\n        }, \n        {\n            \"tile\": \"groundTopFloatingLeftSoil\",\n            \"ranges\": [\n                [\n                    73, 1,\n                    9, 3\n                ],\n                [\n                    100, 1,\n                    8, 4\n                ],\n                [\n                    113, 1,\n                    7, 10\n                ],\n            ]\n        },\n        {\n            \"tile\": \"groundSoil\",\n            \"ranges\": [\n                [\n                    74, 3,\n                    9, 3\n                ],\n                [\n                    101, 5,\n                    8, 4\n                ],\n                [\n                    114, 10,\n                    7, 10\n                ],\n            ]\n        },\n       {\n           \"tile\": \"groundTopFloatingRightSoil\",\n            \"ranges\": [\n                [\n                    77, 1,\n                    9, 3\n                ],\n                [\n                    106, 1,\n                    8, 4\n                ],\n                [\n                    124, 1,\n                    7, 10\n                ],\n            ]\n        },\n\n       {\n           \"tile\": \"platformMiddle\",\n        //    \"type\": \"floatingPlatform\",\n           \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    14, 11,\n                    8, 1\n                ],\n                [\n                    82, 1,\n                    7, 1\n                ],\n                [\n                    87, 1,\n                    7, 1\n                ],\n                [\n                    186, 7,\n                    6, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"platformLeft\",\n        //    \"type\": \"floatingPlatform\",\n           \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    8, 1,\n                    8, 1\n                ],\n                [\n                    13, 1,\n                    8, 1\n                ],\n                [\n                    28, 1,\n                    6, 1\n                ],\n                [\n                    81, 1,\n                    7, 1\n                ],\n                [\n                    86, 1,\n                    7, 1\n                ],\n                [\n                    148, 1,\n                    8, 1\n                ],\n                [\n                    148, 1,\n                    3, 1\n                ],\n                [\n                    185, 1,\n                    6, 1\n                ],\n            ]\n        },\n       {\n           \"tile\": \"platformRight\",\n        //    \"type\": \"floatingPlatform\",\n           \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    9, 1,\n                    8, 1\n                ],\n                [\n                    25, 1,\n                    8, 1\n                ],\n                [\n                    29, 1,\n                    6, 1\n                ],\n                [\n                    83, 1,\n                    7, 1\n                ],               \n                [\n                    88, 1,\n                    7, 1\n                ],      \n                [\n                    149, 1,\n                    8, 1\n                ],       \n                [\n                    149, 1,\n                    3, 1\n                ],       \n                [\n                    193, 1,\n                    6, 1\n                ],  \n            ]\n        },\n        {\n            \"tile\": \"mysteryBox\",\n            \"type\": \"box\",\n            \"item\": \"mushroom\",\n            \"ranges\": [\n                [\n                    19, 1,\n                    4, 1\n                ]\n            ]\n        },\n        {\n            \"tile\": \"grass1\",\n            \"ranges\": [\n                [\n                    7, 1,\n                    11, 1\n                ],\n                [\n                    45, 1,\n                    11, 1\n                ],\n                [\n                    60, 1,\n                    11, 1\n                ],\n                [\n                    96, 1,\n                    11, 1\n                ],\n                [\n                    169, 1,\n                    5, 1\n                ],\n\n            ]\n        },\n        {\n            \"tile\": \"grass2\",\n            \"ranges\": [\n                [\n                    8, 2,\n                    11, 1\n                ],\n                [\n                    46, 3,\n                    11, 1\n                ],\n                [\n                    61, 3,\n                    11, 1\n                ],\n                [\n                    97, 1,\n                    11, 1\n                ],\n                [\n                    170, 3,\n                    5, 1\n                ],\n\n            ]\n        },\n        // {\n        //     \"tile\": \"grass3\",\n        //     \"ranges\": [\n\n        //     ]\n        // },\n        {\n            \"tile\": \"grass4\",\n            \"ranges\": [\n                [\n                    10, 1,\n                    11, 1\n                ],\n                [\n                    49, 1,\n                    11, 1\n                ],\n                [\n                    64, 1,\n                    11, 1\n                ],\n                [\n                    98, 1,\n                    11, 1\n                ],\n                [\n                    173, 1,\n                    5, 1\n                ],\n            ]\n        },\n        {\n            \"tile\": \"singlePlatform\",\n            // \"type\": \"floatingPlatform\",\n            \"type\": \"ground\",\n            \"ranges\": [\n                [\n                    70, 1,\n                    9, 1\n                ],\n                [\n                    40, 3,\n                    7, 1\n                ],\n                [\n                    45, 3,\n                    7, 1\n                ],\n                [\n                    109, 1,\n                    9, 1\n                ],\n                [\n                    109, 1,\n                    4, 1\n                ],\n                [\n                    137, 1,\n                    7, 1\n                ],\n                [\n                    160, 1,\n                    3, 1\n                ],\n                [\n                    181, 1,\n                    8, 1\n                ],\n                [\n                    196, 1,\n                    8, 1\n                ],\n                [\n                    199, 1,\n                    10, 1\n                ],\n            ]\n        },\n        {\n            \"tile\": \"transparent\",\n            \"ranges\": [\n                [\n                    79, 14,\n                    12,2\n                ],\n                [\n                    111, 2,\n                    12,2\n                ],\n                [\n                    125, 5,\n                    12,2\n                ],\n                [\n                    136, 4,\n                    10,2\n                ],\n                [\n                    146, 3,\n                    10,4\n                ],\n                [\n                    159, 3,\n                    6,2\n                ],\n            ]\n        },\n\n    ],\n    \"enemies\": [\n\n        {\n            \"name\": \"dragon\",\n            \"x\": 1900,\n            \"y\": 200,\n            \"x1Limit\": 1200,\n            \"x2Limit\": 1900,\n            \"trigger\": 600\n        },\n        {\n            \"name\": \"dragon\",\n            \"x\": 1200,\n            \"y\": 200,\n            \"x1Limit\": 1200,\n            \"x2Limit\": 1900,\n            \"trigger\": 600\n        },\n        {\n            \"name\": \"dragon\",\n            \"x\": 2900,\n            \"y\": 200,\n            \"x1Limit\": 2700,\n            \"x2Limit\": 3100,\n            \"trigger\": 2000\n        },\n        {\n            \"name\": \"dragon\",\n            \"x\": 4000,\n            \"y\": 200,\n            \"x1Limit\": 3950,\n            \"x2Limit\": 4050,\n            \"trigger\": 3500\n        },\n        {\n            \"name\": \"dragon\",\n            \"x\": 5100,\n            \"y\": 0,\n            \"x1Limit\": 4700,\n            \"x2Limit\": 5120,\n            \"trigger\": 4000\n        },\n        {\n            \"name\": \"dragon\",\n            \"x\": 4700,\n            \"y\": 0,\n            \"x1Limit\": 4700,\n            \"x2Limit\": 5120,\n            \"trigger\": 4000\n        },\n        {\n            \"name\": \"bullet\",\n            \"x\": 1300,\n            \"y\": 100,\n            \"trigger\": 700\n        },\n        {\n            \"name\": \"bullet\",\n            \"x\": 3700,\n            \"y\": 40,\n            \"trigger\": 3300\n        },\n        {\n            \"name\": \"bullet\",\n            \"x\": 4400,\n            \"y\": 150,\n            \"trigger\": 4000\n        },\n        {\n            \"name\": \"bullet\",\n            \"x\": 5100,\n            \"y\": 50,\n            \"trigger\": 4700\n        },\n        {\n            \"name\": \"bullet\",\n            \"x\": 4800,\n            \"y\": 50,\n            \"trigger\": 4400\n        },\n    ]\n}","import backgroundAssets from \"./imgs/background_assets.png\";\nimport mario from \"./imgs/mario.png\";\nimport enemies from \"./imgs/enemies.png\";\nimport backgroundFirstLayer from \"./imgs/background.png\";\nimport thanks from \"./imgs/thank_you.png\";\nimport titleScreen from \"./imgs/super-mario-world.png\";\nimport musicAudio from \"./audio/music.mp3\";\n\nexport const backgroundImage = new Image();\nbackgroundImage.src = backgroundAssets;\n\nexport const thanksImage = new Image();\nthanksImage.src = thanks;\n\nexport const titleScreenImage = new Image();\ntitleScreenImage.src = titleScreen;\n\nexport const backgroundFirstLayerImage = new Image();\nbackgroundFirstLayerImage.src = backgroundFirstLayer;\n\nexport const music = new Audio(musicAudio);\n\nexport const marioImage = new Image();\nmarioImage.src = mario;\n\nexport const enemiesImage = new Image();\nenemiesImage.src = enemies;\n","export default class Collider {\n    constructor(tileMap){\n        this.tileMap = tileMap; \n        this.tileSize = 29;\n        this.handleMatchingTiles = this.handleMatchingTiles;\n    }\n\n    checkX(gameObj) {\n        if(gameObj.status === \"ignoreCollisions\") return;\n        \n        if (gameObj.pos.x < 0) {\n            gameObj.pos.x = 0;\n            gameObj.vel.x = 0;\n        }\n        let x;\n        if (gameObj.vel.x > 0) {\n            x = gameObj.getRight(); //mario right side\n        } else if (gameObj.vel.x < 0) {\n            x = gameObj.pos.x; //mario bottom side\n        } else {\n            return;\n        }\n        const matchingTiles = this.findMatchingTiles(x, x,\n            gameObj.pos.y, gameObj.getBottom());\n        this.handleMatchingTilesX(gameObj, matchingTiles);\n\n    }\n\n    handleMatchingTilesX(gameObj, matchingTiles) {\n        matchingTiles.forEach(match => {\n            if (match.tile.type === \"ground\" || match.tile.type === \"box\") {\n                this.handleGroundCollisionX(gameObj, match);\n            // } else if (match.tile.type === \"floatingPlatform\") {\n                //no x detection needed for floating platform\n            }\n\n        });\n    }\n\n    handleGroundCollisionX(gameObj, match) {\n        if (gameObj.vel.x > 0) {\n            if (gameObj.getRight() > match.left) {\n                gameObj.pos.x = match.left - gameObj.width;\n                gameObj.vel.x = 0;\n            }\n        }\n        if (gameObj.vel.x < 0) {\n            if (gameObj.pos.x < match.right) {\n                gameObj.pos.x = match.right;\n                gameObj.vel.x = 0;\n            }\n        }\n    }\n\n    checkY(gameObj){\n        let y;\n        // 3 cases of velocity \n        if (gameObj.vel.y === 0 || gameObj.status === \"ignoreCollisions\") {\n            return;\n        } else if ( gameObj.vel.y > 0 ) {\n            //object moving down, check bottom of object\n            y = gameObj.getBottom();\n        } else if ( gameObj.vel.y < 0 ) {\n            //object moving up, check top of object\n            y = gameObj.pos.y;\n        }\n        const xStart = gameObj.pos.x;\n        const xEnd = gameObj.getRight();\n\n        const matchingTiles = this.findMatchingTiles(xStart, xEnd, y, y);\n        this.handleMatchingTilesY(gameObj, matchingTiles);\n    }\n\n    handleMatchingTilesY(gameObj,matchingTiles) {\n        matchingTiles.forEach(match => {\n            if (match.tile.type === \"ground\") {\n                this.handleGroundCollisionY(gameObj,match);\n            } else if (match.tile.type === \"floatingPlatform\" || match.tile.type === \"box\") {\n                this.handleFloatingPlatformY(gameObj,match);\n            }\n\n        });\n    }\n    handleGroundCollisionY(gameObj, match) {\n        if (gameObj.vel.y > 0) {\n            if (gameObj.getBottom() > match.top) {\n                gameObj.pos.y = match.top - gameObj.height;\n                gameObj.vel.y = 0;\n                gameObj.isGrounded = true;\n            }\n        }\n        if (gameObj.vel.y < 0) {\n            if (gameObj.pos.y < match.bottom) {\n                gameObj.pos.y = match.bottom;\n                gameObj.vel.y = 0;\n                if (gameObj.jump) gameObj.jump.cancel();\n            }\n        }\n    }\n    handleFloatingPlatformY(gameObj, match) {\n        if (gameObj.vel.y > 0) {\n            if (gameObj.getBottom() > match.top && gameObj.getLastBottom() <= match.top ) {\n                gameObj.pos.y = match.top - gameObj.height;\n                gameObj.vel.y = 0;\n                gameObj.isGrounded = true;\n            }\n        }\n    }\n\n\n    findMatchingTiles(left,right,top,bottom) {\n        const matchingTiles = [];\n        this.toIndexRange(left, right).forEach(indexX => {\n            this.toIndexRange(top, bottom).forEach(indexY => {\n                const match = this.getByIndex(indexX, indexY);\n                if (match) {\n                    matchingTiles.push(match);\n                }\n            });\n        });\n        return matchingTiles;        \n    }\n    toIndexRange(pos1, pos2) {\n        const posMax = Math.ceil(pos2 / this.tileSize) * this.tileSize;\n        const range = [];\n        let pos = pos1;\n        do {\n            range.push(Math.floor(pos / this.tileSize));\n            pos += this.tileSize;\n        } while (pos < posMax);\n        return range;\n    }\n    getByIndex(indexX, indexY) {\n        let tile;\n        if (this.tileMap[indexX]) tile = this.tileMap[indexX][indexY];\n        if (tile) { // top left corner, bottom right corner\n            const left = indexX * this.tileSize;\n            const right = left + this.tileSize;\n            const top = indexY * this.tileSize;\n            const bottom = top + this.tileSize;\n            return { tile, left, right, top, bottom, }; \n        }\n    }\n\n}","import Mario from './objects/Mario';\nimport Dragon from './objects/Dragon';\nimport Bullet from './objects/Bullet';\nimport MysteryBox from './objects/Mystery_Box';\nimport Collider from './Collider';\nimport tilemap from '../display/tilemap';\nimport SpawnEnemies from './behaviors/Spawn_Enemies';\n\nexport default class Game {\n    constructor(height, width){\n        this.height = height;\n        this.width = width;\n        this.gravity = 20;\n        this.objects = new Set();\n        this.mario = new Mario();\n        this.objects.add(this.mario);\n        this.addSpawns()\n        \n        this.restarting = false;\n        this.totalTime = 0;\n        this.tileMap = [];\n        this.tileSize = 29;\n        this.collider = new Collider(this.tileMap);\n        this.setTilemapLayer = this.setTilemapLayer.bind(this);\n        this.cameraView = this.cameraView.bind(this);\n        this.restartLevel = this.restartLevel.bind(this);\n        this.checkEnemyCollision = this.checkEnemyCollision.bind(this);\n        this.setTilemapLayer();\n    }\n    update(deltaTime) {\n        this.objects.forEach(object => {\n            object.update(deltaTime, this.totalTime, this.objects); //updates velocities\n            object.frames = (object.frames + 1) % 60;\n            object.lastPos.x = object.pos.x;\n            object.lastPos.y = object.pos.y;\n            object.pos.x += object.vel.x * deltaTime;\n            this.collider.checkX(object);\n            \n            object.vel.y += this.gravity;\n            object.pos.y += object.vel.y * deltaTime;\n            this.collider.checkY(object);\n            if (object !== this.mario) this.checkEnemyCollision(object);\n        })\n\n        this.totalTime += deltaTime;\n    }\n    checkEnemyCollision(object){\n        if (this.mario.overlaps(object)) {\n            object.collides(this.mario);\n        }\n    }\n    addSpawns() {\n        const enemies = new Set();\n        let newEnemy;\n        tilemap.enemies.forEach( enemy => {\n            if (enemy.name === \"dragon\") {\n                newEnemy = new Dragon(\n                    enemy.x, enemy.y,  //initial spawn\n                    enemy.x1Limit, enemy.x2Limit // walk path\n                );\n            } else if ( enemy.name === \"bullet\") {\n                newEnemy = new Bullet(\n                    enemy.x, enemy.y //initial spawn\n                );\n            }\n            newEnemy.trigger = enemy.trigger;\n            enemies.add(newEnemy);\n        })\n        this.mario.addBehavior(new SpawnEnemies(this.objects,enemies));\n\n    }\n    setTilemapLayer() {\n        tilemap.backgrounds.forEach(background => {\n            background.ranges.forEach(range => {\n                const [xStart, xLength, yStart, yLength] = range;\n                const xEnd = xStart + xLength;\n                const yEnd = yStart + yLength;\n                for (let x = xStart; x < xEnd; x++) {\n                    for (let y = yStart; y < yEnd; y++) {\n                        const tile = {\n                            name: background.tile,\n                            type: background.type\n                        };\n                        this.setTile(x, y, tile)\n                        if (background.tile === \"mysteryBox\") {\n                            const box = new MysteryBox(x, y, tile);\n                            this.objects.add(box);\n                        }\n                    }\n                }\n            });\n        });\n    }\n    restartLevel(camera){\n        if(this.mario.status === \"ignoreCollisions\" && !this.restarting){\n            this.restarting = true;\n            const game = this;\n            setTimeout( () => {\n                game.removeEnemies();\n                game.mario.lives = 1;\n                game.mario.pos.set(145, 100);\n                game.mario.invincible.cancel();\n                camera.pos.x = 0;\n\n                game.addSpawns()\n                this.setTilemapLayer();\n                game.restarting = false;\n\n            }, 1500)\n        }\n    }\n    removeEnemies() {\n        this.objects.forEach( object => {\n            if (object !== this.mario) this.objects.delete(object);\n        })\n    }\n    setTile(x, y, tile){\n        if(!this.tileMap[x]) this.tileMap[x] = [];\n        this.tileMap[x][y] = tile;\n    }\n    getTile(x,y){\n        if(this.tileMap[x]) return this.tileMap[x][y];\n    }\n    cameraView(camera, backgroundSpriteSheet){\n        // center camera on mario\n        //scrolling commented out for testing\n        this.restartLevel(camera);\n\n        if ( this.mario.pos.x > 300 && this.mario.frame !== \"lose\") {\n            camera.pos.x = this.mario.pos.x - 300;\n        }\n    \n        const cameraPanel = document.createElement('canvas');\n        cameraPanel.width = camera.width + this.tileSize;\n        cameraPanel.height = camera.height;\n        const panelCtx = cameraPanel.getContext('2d');\n        // first need to figure out what tile columns to draw\n        const columnStart = this.getTileIndex( camera.pos.x);\n        const columnEnd = columnStart + this.getTileIndex( camera.width);\n\n        // draw what the camera is focusing on\n        for (let x = columnStart; x <= columnEnd; x++) {\n            const column = this.tileMap[x];\n            if (column) {\n                column.forEach((tile, y) => {\n                    if (tile.name === \"mysteryBox\") {\n\n                        backgroundSpriteSheet.draw(\"transparent\", panelCtx, (x - columnStart) * this.tileSize, y * this.tileSize);\n                    } else {\n                        backgroundSpriteSheet.draw(tile.name, panelCtx, (x - columnStart) * this.tileSize, y * this.tileSize);\n                    }\n                });\n            }\n        }\n        const marioPosX = this.getTileIndex(this.mario.pos.x) + 1;\n        const marioPosY = this.getTileIndex(this.mario.pos.y) + 1;\n        let tileName = this.getTile(marioPosX, marioPosY);\n        if (tileName) tileName = tileName.name;\n        // console.log(\"x: \", marioPosX, \", y: \", marioPosY, \", tilename: \", tileName);\n        //draw camera by pixel for a smooth transition\n        return cameraPanel;\n    }\n    getTileIndex(pos){\n        return Math.floor(pos / this.tileSize)\n    }\n}","import Behavior from './Behavior';\nexport default class AutoMove extends Behavior {\n    constructor(moveLeftLimit = 0, moveRightLimit = 9999999, startingDirection = -1) {\n        super('autoMove');\n        this.startingDirection = startingDirection;\n        this.moveLeftLimit = moveLeftLimit;\n        this.moveRightLimit = moveRightLimit;\n    }\n\n    update(object, deltaTime) {\n        //100 left limit\n        // pos.x = 200\n        // 300 right limit\n        // if (object.frame === \"mushroom\") debugger\n        if(object.pos.x < this.moveLeftLimit ) {\n            object.vel.x = object.speed * deltaTime;\n        } else if (object.pos.x > this.moveRightLimit) {\n            object.vel.x = -object.speed * deltaTime;\n        } else if ( object.vel.x === 0 ) {\n            object.vel.x = this.startingDirection * object.speed * deltaTime;\n        }\n        // object.vel.x = this.speed * this.direction * deltaTime;\n    }\n}\n\n","export default class Behavior {\n    constructor(name) {\n        this.name = name;\n    }\n\n    update() {\n        console.warn(`You forgot to update ${this.name} behavior`);\n    }\n}\n","import Behavior from './Behavior';\nexport default class BoxJump extends Behavior {\n    constructor() {\n        super('boxJump');\n        this.maxDuration = 0.1;\n        this.vel = 150;\n        this.duration = 0;\n    }\n\n    start() {\n        this.duration = this.maxDuration;\n    }\n    update(box, deltaTime, objects) {\n        if (this.duration > 0) {\n            box.vel.y = -this.vel;\n            this.duration -= deltaTime;\n        }\n        if (box.vel.y > 0) {\n            if (box.getTop() > box.originalPos) {\n                box.pos.y = box.originalPos;\n                box.vel.y = 0;\n                if(this.duration < 0) {\n                    box.setToTile(objects);\n                    objects.delete(box);\n                }\n            }\n        }\n    }\n\n}\n\n\n\n","import Behavior from './Behavior';\nexport default class IgnoreGravity extends Behavior {\n    constructor() {\n        super('ignoreGravity');\n        this.gravity = 20;\n    }\n\n    update(object, deltaTime) {\n        object.vel.y -= this.gravity;\n    }\n}\n\n","import Behavior from './Behavior';\nexport default class Invincible extends Behavior {\n    constructor() {\n        super('invincible');\n        this.maxDuration = 2;\n        this.duration = 0;\n    }\n    start() {\n        this.duration = this.maxDuration;\n    }\n    cancel() {\n        this.duration = 0;\n    }\n    update(mario, deltaTime) {\n        if (this.duration > 0) {\n            mario.invinciblity = true;\n            this.duration -= deltaTime;\n        } else {\n            mario.invinciblity = false;\n        }\n    }\n}\n\n","import Behavior from './Behavior';\nexport default class Jump extends Behavior {\n    constructor() {\n        super('jump');\n        this.maxDuration = 0.2;\n        this.vel = 300;\n        this.duration = 0;\n        this.isGrounded = true;\n    }\n\n    start() {\n        if(this.isGrounded) this.duration = this.maxDuration;\n    }\n    cancel() {\n        this.isGrounded = false;\n        this.duration = 0;\n    }\n    update(mario, deltaTime) {\n        if (mario.frame === \"lose\") return;\n\n        if (this.duration > 0) {\n            mario.vel.y = -this.vel;\n            this.duration -= deltaTime;\n        }\n        if(mario.isGrounded) this.isGrounded = true;\n    }\n}\n\n","import Behavior from './Behavior';\nexport default class JumpOnLose extends Behavior {\n    constructor() {\n        super('jumpOnLose');\n        this.maxDuration = 0.3;\n        this.vel = 300;\n        this.duration = 0;\n    }\n\n    start() {\n        this.duration = this.maxDuration;\n    }\n    update(mario, deltaTime) {\n        if (this.duration > 0) {\n            mario.vel.y = -this.vel;\n            this.duration -= deltaTime;\n        } \n    }\n}\n\n","import Behavior from './Behavior';\nexport default class SpawnEnemies extends Behavior {\n    constructor(gameObjects, enemies) {\n        super('spawnEnemies');\n        this.enemies = enemies;\n        this.gameObjects = gameObjects;\n    }\n\n    update(mario, deltaTime) {\n        this.enemies.forEach(enemy => {\n            if (mario.pos.x >= enemy.trigger) this.spawnEnemy(enemy);\n        });\n    }\n    addEnemy(enemy){\n        this.enemyPositions.add(enemy)\n    }\n    spawnEnemy(enemy){\n        this.gameObjects.add(enemy);\n        this.enemies.delete(enemy);\n    }\n\n}\n\n// this.objects.add(dragon);\n// this.objects.add(bullet);","import Behavior from './Behavior';\nexport default class Stomp extends Behavior {\n    constructor() {\n        super('stomp');\n        this.bouncing = false;\n        this.bounceSpeed = 400;\n    }\n    bounce(){\n        this.bouncing = true;\n    }\n    update(mario) {\n        if (this.bouncing) {\n            mario.vel.y = -this.bounceSpeed;\n            this.bouncing = false;\n        }\n    }\n}\n\n","import Behavior from './Behavior';\nexport default class Walk extends Behavior {\n    constructor() {\n        super('walk');\n        this.leftDirection = 0;\n        this.rightDirection = 0;\n        this.speed = 10000;\n        this.distance = 0;\n    }\n\n    update(mario, deltaTime) {\n        if (mario.frame === \"lose\") return;\n        mario.vel.x = (this.leftDirection + this.rightDirection)  * this.speed * deltaTime;\n        this.distance += mario.vel.x;\n        // mario.vel.x = this.speed * this.direction * deltaTime;\n    }\n}\n\n","import GameObject from './Game_Object';\nimport IgnoreGravity from '../behaviors/Ignore_Gravity';\nimport AutoMove from '../behaviors/Auto_Move';\n\nexport default class Bullet extends GameObject {\n    constructor(xSpawn, ySpawn) {\n        super();\n        this.pos.set(xSpawn, ySpawn);\n        this.initialPos = xSpawn;\n        this.width = 140;\n        this.height = 128;\n        this.addBehavior(new IgnoreGravity());\n        this.addBehavior(new AutoMove());\n        this.frame = \"bulletLeft\"\n        this.status = \"ignoreCollisions\";\n        this.falling = false;\n        this.speed = 10000;\n    }\n    update(deltaTime, totalTime, objects) {\n        this.behaviors.forEach(behavior => {\n            behavior.update(this, deltaTime); //takes in object and deltaTime\n        })\n        if(this.pos.x < this.initialPos - 1200 || this.pos.y > 400) objects.delete(this);\n    }\n\n    collides(mario) {\n        if (mario.invinciblity) return;\n        if (!this.falling) {\n            if (mario.vel.y > this.vel.y &&  mario.getBottom() > this.getTop() && mario.getLastBottom() <= this.getTop() ) {\n\n                mario.stomp.bounce();\n                this.vel.y += 40;\n                this.vel.x = 0;\n                this.removeBehavior(\"ignoreGravity\");\n                this.removeBehavior(\"autoMove\");\n                this.falling = true;\n            } else {\n                mario.lives -= 1;\n                mario.invincible.start();\n                mario.invinciblity = true;\n            }\n        }\n    }\n    draw(ctx, spriteSheets, camera) {\n        spriteSheets.get(\"bullet\").draw(this.frame, ctx, this.pos.x - camera.pos.x, this.pos.y - camera.pos.y)\n    }\n}\n\n","import GameObject from './Game_Object';\nimport AutoMove from '../behaviors/Auto_Move';\n\nexport default class Dragon extends GameObject {\n    constructor(xSpawn, ySpawn, moveLeftLimit, moveRightLimit) {\n        super();\n        this.pos.set(xSpawn, ySpawn);\n\n        this.width = 43;\n        this.height = 63;\n        this.speed = 8000;\n        this.addBehavior(new AutoMove(moveLeftLimit, moveRightLimit));\n        this.stompedCount = 0;\n\n        this.status = \"dragonRegular\";\n        this.facing = \"left\";\n        this.frame = \"regularWalkLeft1\";\n        this.regularWalkLeftFrames = [\"regularWalkLeft1\", \"regularWalkLeft2\"];\n        this.regularWalkRightFrames = [\"regularWalkRight1\", \"regularWalkRight2\"];\n        \n        this.halfWalkLeftFrames = [\"halfFlattenedWalkLeft1\", \"halfFlattenedWalkLeft2\"];\n        this.halfWalkRightFrames = [\"halfFlattenedWalkRight1\", \"halfFlattenedWalkRight2\"];\n\n    }\n    collides(mario) {\n        if (mario.invinciblity) return;\n        if (this.stompedCount !== 2) {\n            if (mario.vel.y > this.vel.y) {\n                mario.stomp.bounce();\n                this.stompedCount += 1;\n            } else {\n                mario.lives -= 1;\n                mario.invincible.start();\n                mario.invinciblity = true;\n            }\n        }\n    }\n    update(deltaTime, totalTime, objects) {\n        this.behaviors.forEach(behavior => {\n            behavior.update(this, deltaTime); //takes in object and deltaTime\n        })\n        this.decideStatus(totalTime, objects);\n    }\n    decideStatus(totalTime, objects){\n        if (this.stompedCount === 2 && this.speed !== 0){\n            setTimeout(() => {\n                objects.delete(this);\n            }, 5000)\n            this.speed = 0;\n            this.vel.x = 0;\n            this.status = \"dragonFlattened\";\n            this.width = 43;\n            this.height = 20;\n\n            this.frame = (this.facing === \"left\") ? \"flattenedLeft\" : \"flattenedRight\";    \n\n        } else if (this.stompedCount === 1) {\n            this.status = \"dragonHalfFlattened\";\n            this.width = 43;\n            this.height = 34;\n\n            this.facing = (this.vel.x > 0) ? \"right\" : \"left\";\n            const frames = (this.facing === \"left\") ? this.halfWalkLeftFrames : this.halfWalkRightFrames;\n            this.frame = this.animationFrame(frames, totalTime, 0.20);\n\n        } else if (this.stompedCount === 0) {\n            this.facing = (this.vel.x > 0) ? \"right\" : \"left\";\n            const frames = (this.facing === \"left\") ? this.regularWalkLeftFrames : this.regularWalkRightFrames;\n            this.frame = this.animationFrame(frames, totalTime, 0.20);\n        }\n\n\n    }\n\n\n    draw(ctx, spriteSheets, camera) {\n        spriteSheets.get(this.status).draw( this.frame, ctx, this.pos.x - camera.pos.x, this.pos.y - camera.pos.y)\n    }\n}\n\n","import {Vector} from '../../util';\nexport default class GameObject {\n    constructor() {\n        this.behaviors = [];\n        this.vel = new Vector();\n        this.pos = new Vector();\n        this.lastPos = new Vector();\n\n        this.width = 0;\n        this.height = 0;\n        this.isGrounded = true;\n        this.frames = 0;\n        this.trigger = 0;\n    }\n    // top and left positions of object are already defined by pos.x and pos.y\n    getRight(){\n        return this.pos.x + this.width;\n    }\n    getLeft(){\n        return this.pos.x;\n    }\n    getTop(){\n        return this.pos.y;\n    }\n    getBottom(){\n        return this.pos.y + this.height;\n    }\n    getLastBottom(){\n        return this.lastPos.y + this.height;\n    }\n    update(deltaTime) {\n        this.behaviors.forEach( behavior => {\n            behavior.update(this, deltaTime); //takes in object and deltaTime\n        })\n    }\n    addBehavior(behavior){\n        this.behaviors.push( behavior ); \n        this[behavior.name] = behavior;\n    }\n    removeBehavior(behavior){\n        this.behaviors.forEach( (beh, idx) => {\n            if (beh.name === behavior) this.behaviors.splice(idx, 1);\n        })\n    }\n    animationFrame(frames, totalTime, frameRate) {\n        const frameIdx = Math.floor(totalTime / frameRate) % frames.length;\n        return frames[frameIdx];\n    }\n    draw(spriteSheets, camera) { \n        \n    }\n    collides(object){\n    }\n}\n\n","import GameObject from './Game_Object';\nimport Jump from '../behaviors/Jump';\nimport JumpOnLose from '../behaviors/Jump_On_Lose';\nimport Walk from '../behaviors/Walk';\nimport Stomp from '../behaviors/Stomp';\nimport Invincible from '../behaviors/Invincible';\n\nexport default class Mario extends GameObject {\n    constructor(){\n        super();\n        this.width = 29;\n        this.height = 40;\n        this.lives = 1;\n        this.invinciblity = false;\n        this.addBehavior(new Jump());\n        this.JumpOnLose = new JumpOnLose();\n        this.addBehavior(this.JumpOnLose);\n        this.addBehavior(new Walk());\n        this.addBehavior(new Stomp());\n        this.addBehavior(new Invincible());\n        this.status = \"idle\"; //other statuses are walking, jumping \n        this.mario = \"regularMario\";\n        this.facing = \"right\";\n        this.frame = \"idleRight\"\n        this.walkRightFrames = [\"walkingRight\", \"idleRight\"];\n        this.walkRightFramesMushroom = [\"walkingRight1\", \"walkingRight2\", \"idleRight\"];\n        this.walkLeftFrames = [\"walkingLeft\", \"idleLeft\"];\n        this.walkLeftFramesMushroom = [\"walkingLeft1\", \"walkingLeft2\", \"idleLeft\"];\n    }\n    update(deltaTime,totalTime) {\n        this.behaviors.forEach(behavior => {\n            behavior.update(this, deltaTime); //takes in object and deltaTime\n        })\n        this.decideStatus(totalTime);\n    }\n\n    decideStatus(totalTime){\n        if (this.pos.y > 400) this.lives = 0; \n        if (this.lives === 0) {\n            this.width = 29;\n            this.height = 40;\n            this.mario = \"regularMario\";\n            this.status = \"ignoreCollisions\";\n            if (this.status === \"ignoreCollisions\" && this.frame !== \"lose\") this.JumpOnLose.start();\n            this.frame = \"lose\";\n            return;\n        } else if ( this.lives === 1 ) {\n            this.width = 29;\n            this.height = 40;\n            this.mario = \"regularMario\";\n        } else if (this.lives === 2) {\n            this.width = 34;\n            this.height = 56;\n            this.mario = \"mushroomMario\";\n        }\n\n\n\n        if (!this.isGrounded ) {\n            if (this.mario === \"regularMario\" || this.vel.y < 0) {\n\n                this.status = \"jumping\"\n                if (this.vel.x > 0) {\n                    this.facing = \"right\";\n                    this.frame = \"jumpingRight\";\n                } else if ( this.vel.x === 0) {\n                    this.frame = (this.facing === \"right\") ? \"jumpingRight\" : \"jumpingLeft\";\n                } else {\n                    this.facing = \"left\";\n                    this.frame = \"jumpingLeft\";\n                }\n            } else {\n                this.status = \"falling\"\n                if (this.vel.x > 0) {\n                    this.facing = \"right\";\n                    this.frame = \"fallingRight\";\n                } else if (this.vel.x === 0) {\n                    this.frame = (this.facing === \"right\") ? \"fallingRight\" : \"fallingLeft\";\n                } else {\n                    this.facing = \"left\";\n                    this.frame = \"fallingLeft\";\n                }\n\n            }\n        }\n        else if (this.vel.x > 0) {\n            this.status = \"walking\";\n            this.facing = \"right\"\n            const totalDistance = Math.abs(this.walk.distance / 800)\n            if (this.lives === 2) {\n\n                const frameIdx = Math.floor( totalDistance % this.walkRightFramesMushroom.length)\n                this.frame = this.walkRightFramesMushroom[frameIdx];\n            } else {\n                const frameIdx = Math.floor( totalDistance % this.walkRightFrames.length)\n                this.frame = this.walkRightFrames[frameIdx];\n\n            }\n        } else if (this.vel.x < 0) {\n            this.status = \"walking\";\n            this.facing = \"left\"\n            const totalDistance = Math.abs(this.walk.distance / 800)\n            if (this.lives === 2) {\n                const frameIdx = Math.floor(totalDistance % this.walkLeftFramesMushroom.length);\n                this.frame = this.walkLeftFramesMushroom[frameIdx];\n            } else {\n                const frameIdx = Math.floor( totalDistance % this.walkLeftFrames.length);\n                this.frame = this.walkLeftFrames[frameIdx];\n            }\n        } else {\n            if (this.status === \"idle\") return;\n\n            if (this.facing === \"right\") {\n                this.frame = \"idleRight\";\n                this.status = \"idle\";\n            } else if (this.facing === \"left\") {\n                \n                this.frame = \"idleLeft\";\n                this.status = \"idle\";\n            }\n\n        }\n\n        if (this.invinciblity && this.lives === 1) {\n            if ( Math.floor( totalTime / 0.2) % 2)\n            this.frame = \"transparent\"\n        }\n    }\n\n    draw(ctx, spriteSheets, camera){ \n        // ctx.strokeStyle = 'red';\n        // ctx.beginPath();\n        // ctx.rect(this.pos.x - camera.pos.x, \n        //     this.pos.y - camera.pos.y,\n        //     this.width, this.height);\n        // ctx.stroke();\n        // if(this.invinciblity) {\n        //     spriteSheets.get(this.mario).draw(this.frame, ctx, this.pos.x - camera.pos.x, this.pos.y - camera.pos.y);\n        // } else {\n            spriteSheets.get(this.mario).draw(this.frame, ctx, this.pos.x - camera.pos.x, this.pos.y - camera.pos.y);\n        // }\n    }\n    overlaps(object){\n        return this.getBottom() > object.getTop()\n            && this.getTop() < object.getBottom()\n            && this.getLeft() < object.getRight()\n            && this.getRight() > object.getLeft();\n    }\n}","import GameObject from './Game_Object';\nimport AutoMove from '../behaviors/Auto_Move';\nexport default class Mushroom extends GameObject {\n    constructor(x, y) {\n        super();\n        this.width = 29;\n        this.height = 29;\n        this.pos.x = x;\n        this.pos.y = y - this.height;\n        this.frame = \"mushroom\";\n        this.status = \"spawning\";\n        this.speed = 5000;\n        this.addBehavior( new AutoMove(400, 700, 1));\n        \n        this.mushroomSpawn = [\"mushroom1\", \"mushroom2\", \"mushroom3\", \"mushroom\"];\n    }\n    collides(mario) {\n        mario.lives = 2;\n        this.status = \"delete\";\n    }\n    update(deltaTime, totalTime, objects) {\n        this.behaviors.forEach(behavior => {\n            behavior.update(this, deltaTime, objects); //takes in object and deltaTime\n        })\n        this.decideStatus(totalTime, objects);\n    }\n    decideStatus(totalTime, objects) {\n        if (this.status === \"spawning\") {\n            // this.frame = this.animationFrame(this.mushroomSpawn, totalTime, 0.20);\n        } else if (this.status === \"delete\") {\n\n            objects.delete(this);\n        }\n    }\n\n    draw(ctx, spriteSheets, camera) {\n        spriteSheets.get(\"background\").draw(this.frame, ctx, this.pos.x - camera.pos.x, this.pos.y - camera.pos.y);\n    }\n}\n\n","import GameObject from './Game_Object';\nimport BoxJump from '../behaviors/Box_Jump';\nimport Mushroom from './Mushroom';\nexport default class MysteryBox extends GameObject {\n    constructor(x,y, tile) {\n        super();\n        // this.item = item;\n        this.tile = tile;\n        this.addBehavior(new BoxJump());\n        this.width = 29;\n        this.height = 29;\n        this.pos.x = this.width * x;\n        this.pos.y = this.height * y;\n        this.originalPos = this.height * y;\n        this.frame = \"mysteryBox1\";\n        this.hit = false;\n        this.status = \"ignoreCollisions\";\n        this.boxIdleAnimation = [\"mysteryBox1\", \"mysteryBox2\", \"mysteryBox3\", \"mysteryBox4\"];\n\n    }\n    collides(mario) {\n        if (mario.vel.y < 0) {\n            if (mario.pos.y < this.getBottom()) {\n                mario.pos.y = this.getBottom();\n                mario.vel.y = 0;\n                mario.jump.cancel();\n                this.status = \"collided\";\n                this.boxJump.start();\n            }\n        }\n    }\n    update(deltaTime, totalTime, objects) {\n        this.behaviors.forEach(behavior => {\n            behavior.update(this, deltaTime, objects); //takes in object and deltaTime\n        })\n        this.decideStatus(totalTime, objects);\n    }\n    decideStatus(totalTime, objects) {\n        if (this.status === \"ignoreCollisions\") {\n            this.frame = this.animationFrame(this.boxIdleAnimation, totalTime, 0.20);\n        } else {\n            this.frame = \"singlePlatform\";\n        }\n    }\n    setToTile(objects){\n        this.tile.name = \"singlePlatform\";\n        this.tile.type = \"ground\";\n        const mushroom = new Mushroom(this.pos.x, this.pos.y)\n        objects.add(mushroom);\n    }\n\n    draw(ctx, spriteSheets, camera) {\n        spriteSheets.get(\"background\").draw(this.frame, ctx, this.pos.x - camera.pos.x, this.pos.y - camera.pos.y);\n    }\n}\n\n","module.exports = \"files/background.png\";","module.exports = \"files/background_assets.png\";","module.exports = \"files/enemies.png\";","module.exports = \"files/mario.png\";","module.exports = \"files/super-mario-world.png\";","module.exports = \"files/thank_you.png\";","import Game from './game/Game.js';\nimport Display from './display/Display.js';\nimport GameMain from './Game_Main.js';\nimport { titleScreenImage, music} from './files';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const height = 400;\n    const width = 700;\n\n    const canvas = document.getElementById(\"canvas\");\n    const game = new Game(height, width); \n    const display = new Display(canvas, height, width);\n    display.loadWorld();\n    const gameMain = new GameMain(game,display);\n    const sound = document.querySelector(\".sound\");\n    const noSound = document.querySelector(\".noSound\");\n\n    sound.addEventListener(\"click\", ()=> {\n        music.play();\n        gameMain.start();\n        noSound.parentNode.removeChild(noSound);\n        sound.parentNode.removeChild(sound);\n    }, { once: true })\n    noSound.addEventListener(\"click\", ()=> {\n        \n        gameMain.start();\n        sound.parentNode.removeChild(sound);\n        noSound.parentNode.removeChild(noSound);\n    }, { once: true })\n    titleScreenImage.onload = function () {\n        display.ctx.drawImage( titleScreenImage, 100, 10, 500, 200);\n    }\n});\n","export class Vector {\n    constructor(x = 0, y = 0){\n        this.x = x;\n        this.y = y;\n    }\n    set(x,y){\n        this.x = x;\n        this.y = y;\n    }\n}"],"sourceRoot":""}